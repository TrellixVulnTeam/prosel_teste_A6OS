# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2016-11-16 13:47
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0007_alter_validators_add_error_messages"),
        ("editais", "0004_auto_20161013_1651"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cursos", "0015_auto_20161020_1459"),
        ("psct", "0007_adicionar_candidatos_ao_grupo"),
    ]

    operations = [
        migrations.CreateModel(
            name="AvaliacaoAvaliador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                (
                    "situacao",
                    models.CharField(
                        choices=[
                            ("", "--------"),
                            ("DEFERIDA", "Deferida"),
                            ("INDEFERIDA", "Indeferida"),
                        ],
                        max_length=25,
                        verbose_name="Situação",
                    ),
                ),
                (
                    "concluida",
                    models.CharField(
                        choices=[("", "--------"), ("NAO", "Não"), ("SIM", "Sim")],
                        help_text="A avaliação não poderá mais ser editada e será entregue ao homologador após o envio.",
                        max_length=5,
                        verbose_name="Enviar avaliação",
                    ),
                ),
                (
                    "avaliador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="avaliacoes_avaliador_psct",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Avaliador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação de Avaliador",
                "verbose_name_plural": "Avaliações de Avaliadores",
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoHomologador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                (
                    "situacao",
                    models.CharField(
                        choices=[
                            ("", "--------"),
                            ("DEFERIDA", "Deferida"),
                            ("INDEFERIDA", "Indeferida"),
                        ],
                        max_length=25,
                        verbose_name="Situação",
                    ),
                ),
                (
                    "homologador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="avaliacoes_homologador_psct",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Homologador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação de Homologador",
                "verbose_name_plural": "Avaliações de Homologadores",
            },
        ),
        migrations.CreateModel(
            name="ComprovanteInscricao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chave", models.CharField(max_length=255, verbose_name="Hash")),
                ("arquivo", models.FileField(upload_to="", verbose_name="Arquivo")),
                (
                    "data_criacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Criação"
                    ),
                ),
            ],
            options={
                "verbose_name": "Comprovante de Inscrição",
                "verbose_name_plural": "Comprovantes de Inscrição",
            },
        ),
        migrations.CreateModel(
            name="CursoEdital",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "curso",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="cursos.CursoNoCampus",
                        verbose_name="Curso",
                    ),
                ),
                (
                    "edital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="editais.Edital",
                        verbose_name="Edital",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vaga dos cursos do processo de inscrição",
                "verbose_name_plural": "Vagas dos cursos do processo de inscrição",
            },
        ),
        migrations.CreateModel(
            name="FaseAnalise",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                ("nome", models.CharField(max_length=255, verbose_name="Nome da Fase")),
                ("data_inicio", models.DateTimeField(verbose_name="Data de Início")),
                (
                    "data_encerramento",
                    models.DateTimeField(verbose_name="Data de encerramento"),
                ),
                (
                    "data_resultado",
                    models.DateTimeField(
                        verbose_name="Data de divulgação do resultado"
                    ),
                ),
                (
                    "quantidade_avaliadores",
                    models.PositiveSmallIntegerField(
                        default=2, verbose_name="Quantidade de Avaliadores"
                    ),
                ),
                (
                    "requer_homologador",
                    models.BooleanField(
                        default=True, verbose_name="Requer homologador?"
                    ),
                ),
            ],
            options={
                "verbose_name": "Fase de Análise",
                "verbose_name_plural": "Fases de Análise",
            },
        ),
        migrations.CreateModel(
            name="FaseRecurso",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                ("nome", models.CharField(max_length=255, verbose_name="Nome da Fase")),
                (
                    "data_inicio_submissao",
                    models.DateTimeField(
                        verbose_name="Início da Submissão de Recursos"
                    ),
                ),
                (
                    "data_encerramento_submissao",
                    models.DateTimeField(
                        verbose_name="Encerramento da Submissão de Recursos"
                    ),
                ),
                (
                    "data_inicio_analise",
                    models.DateTimeField(verbose_name="Início da Análise de Recursos"),
                ),
                (
                    "data_encerramento_analise",
                    models.DateTimeField(
                        verbose_name="Encerramento da Análise de Recursos"
                    ),
                ),
                (
                    "data_resultado",
                    models.DateTimeField(
                        verbose_name="Data de divulgação do resultado dos recursos"
                    ),
                ),
                (
                    "quantidade_avaliadores",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Quantidade de Avaliadores"
                    ),
                ),
                (
                    "requer_homologador",
                    models.BooleanField(
                        default=True, verbose_name="Requer homologador?"
                    ),
                ),
            ],
            options={
                "verbose_name": "Fase de Recurso",
                "verbose_name_plural": "Fases de Recursos",
            },
        ),
        migrations.CreateModel(
            name="GrupoEdital",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "edital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="editais.Edital",
                        verbose_name="Edital",
                    ),
                ),
                (
                    "grupo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grupos_editais",
                        to="auth.Group",
                        verbose_name="Grupo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Grupo de Edital",
                "verbose_name_plural": "Grupos de Edtais",
                "ordering": ("grupo__name",),
            },
        ),
        migrations.CreateModel(
            name="InscricaoPreAnalise",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pontuacao",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("0.0"),
                        max_digits=5,
                        verbose_name="Pontuação",
                    ),
                ),
                (
                    "pontuacao_pt",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("0.0"),
                        max_digits=5,
                        verbose_name="Valor de desempate PT",
                    ),
                ),
                (
                    "pontuacao_mt",
                    models.DecimalField(
                        decimal_places=1,
                        default=Decimal("0.0"),
                        max_digits=5,
                        verbose_name="Valor de desempate MT",
                    ),
                ),
                ("nascimento", models.DateField(verbose_name="Data de Nascimento")),
                (
                    "situacao",
                    models.CharField(
                        choices=[
                            ("", "--------"),
                            ("SEM_AVALIADORES", "Sem Avaliadores"),
                            ("AVALIADOR_FALTANDO", "Avaliador faltando"),
                            ("AVALIACAO_PENDENTE", "Com Avaliação Pendente"),
                            ("AGUARDANDO_HOMOLOGADOR", "Aguardando Homologador"),
                            ("DEFERIDA", "Deferida"),
                            ("INDEFERIDA", "Indeferida"),
                        ],
                        max_length=55,
                        verbose_name="Situação",
                    ),
                ),
                (
                    "candidato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="psct.Candidato",
                        verbose_name="Candidato",
                    ),
                ),
                (
                    "curso",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inscricoes_preanalise",
                        to="cursos.CursoNoCampus",
                        verbose_name="Curso",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inscricoes",
                        to="psct.FaseAnalise",
                        verbose_name="Fase Análise",
                    ),
                ),
                (
                    "modalidade",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="psct.Modalidade",
                        verbose_name="Modalidade da Cota",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inscrição Pré-Análise",
                "verbose_name_plural": "Inscrições Pré-Análise",
                "ordering": (
                    "-pontuacao",
                    "-pontuacao_mt",
                    "-pontuacao_pt",
                    "nascimento",
                ),
            },
        ),
        migrations.CreateModel(
            name="JustificativaIndeferimento",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "texto",
                    models.TextField(
                        verbose_name="Texto da Justificativa de Indeferimento"
                    ),
                ),
                (
                    "edital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="editais.Edital",
                        verbose_name="Edital",
                    ),
                ),
            ],
            options={
                "verbose_name": "Justificativa de Indeferimento",
                "verbose_name_plural": "Justificativas de Indeferimento",
            },
        ),
        migrations.CreateModel(
            name="MailBoxAvaliador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avaliador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_avaliador",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Avaliador",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_avaliadores",
                        to="psct.FaseRecurso",
                        verbose_name="Fase do Recurso",
                    ),
                ),
            ],
            options={
                "verbose_name": "Caixa de Recursos do Avaliador",
                "verbose_name_plural": "Caixas de Recursos dos Avaliadores",
            },
        ),
        migrations.CreateModel(
            name="MailBoxAvaliadorInscricao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avaliador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_avaliador_inscricao",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Avaliador",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_avaliadores",
                        to="psct.FaseAnalise",
                        verbose_name="Fase de Análise",
                    ),
                ),
                (
                    "inscricoes",
                    models.ManyToManyField(
                        related_name="mailbox_avaliadores",
                        to="psct.InscricaoPreAnalise",
                        verbose_name="Inscrições",
                    ),
                ),
            ],
            options={
                "verbose_name": "Caixa de Inscrições do Avaliador",
                "verbose_name_plural": "Caixas de Inscrições dos Avaliadores",
            },
        ),
        migrations.CreateModel(
            name="MailBoxGrupoAvaliadores",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_grupo_avaliadores",
                        to="psct.FaseRecurso",
                        verbose_name="Fase do Recurso",
                    ),
                ),
                (
                    "grupo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_grupo_avaliadores",
                        to="auth.Group",
                        verbose_name="Grupo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recursos do Grupo de Avaliadores",
                "verbose_name_plural": "Recursos dos Grupos de Avaliadores",
            },
        ),
        migrations.CreateModel(
            name="MailBoxGrupoHomologadores",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_grupo_homologadores",
                        to="psct.FaseRecurso",
                        verbose_name="Fase do Recurso",
                    ),
                ),
                (
                    "grupo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_grupo_homologadores",
                        to="auth.Group",
                        verbose_name="Grupo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recursos do Grupo de Homologadores",
                "verbose_name_plural": "Recursos dos Grupos de Homologadores",
            },
        ),
        migrations.CreateModel(
            name="MailBoxHomologador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_homologadores",
                        to="psct.FaseRecurso",
                        verbose_name="Fase do Recurso",
                    ),
                ),
                (
                    "homologador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_homologador",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Homologador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Caixa de Recursos do Homologador",
                "verbose_name_plural": "Caixas de Recursos dos Homologadores",
            },
        ),
        migrations.CreateModel(
            name="MailBoxHomologadorInscricao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_homologadores",
                        to="psct.FaseAnalise",
                        verbose_name="Fase de Análise",
                    ),
                ),
                (
                    "homologador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mailbox_homologador_inscricao",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Homologador",
                    ),
                ),
                (
                    "inscricoes",
                    models.ManyToManyField(
                        related_name="mailbox_homologadores",
                        to="psct.InscricaoPreAnalise",
                        verbose_name="Inscrições",
                    ),
                ),
            ],
            options={
                "verbose_name": "Caixa de Inscrições do Homologador",
                "verbose_name_plural": "Caixas de Inscrições dos Homologadores",
            },
        ),
        migrations.CreateModel(
            name="ModalidadeVagaCursoEdital",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantidade_vagas",
                    models.IntegerField(default=0, verbose_name="Quantidade de vagas"),
                ),
                (
                    "multiplicador",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Multiplicador"
                    ),
                ),
                (
                    "curso_edital",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="modalidades",
                        to="psct.CursoEdital",
                        verbose_name="Curso do Edital",
                    ),
                ),
                (
                    "modalidade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="psct.Modalidade",
                        verbose_name="Modalidade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vaga por modalidade do curso do edital",
                "verbose_name_plural": "Vagas por modalidade do curso do edital",
            },
        ),
        migrations.CreateModel(
            name="ParecerAvaliador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                ("texto", models.TextField(verbose_name="Texto do Parecer")),
                (
                    "aceito",
                    models.BooleanField(
                        choices=[
                            ("", "------"),
                            (False, "Indeferida"),
                            (True, "Deferida"),
                        ],
                        verbose_name="Situação",
                    ),
                ),
                (
                    "concluido",
                    models.BooleanField(
                        choices=[("", "------"), (False, "Não"), (True, "Sim")],
                        help_text="O parecer não poderá mais ser editado e será entregue ao homologador.",
                        verbose_name="Enviar avaliação",
                    ),
                ),
                (
                    "avaliador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pareceres_avaliador",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Avaliador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parecer Avaliador",
                "verbose_name_plural": "Pareceres de Avaliadores",
            },
        ),
        migrations.CreateModel(
            name="ParecerHomologador",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                ("texto", models.TextField(verbose_name="Texto do Parecer")),
                (
                    "aceito",
                    models.BooleanField(
                        choices=[
                            ("", "------"),
                            (False, "Indeferida"),
                            (True, "Deferida"),
                        ],
                        verbose_name="Situação",
                    ),
                ),
                (
                    "homologador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pareceres_homologador",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Homologador",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parecer Homologador",
                "verbose_name_plural": "Pareceres de Homologadores",
            },
        ),
        migrations.CreateModel(
            name="ProgressoAnalise",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avaliadas",
                    models.IntegerField(
                        default=0, verbose_name="Quantidade de Inscrições Avaliadas"
                    ),
                ),
                (
                    "em_analise",
                    models.IntegerField(
                        default=0, verbose_name="Quantidade de Inscrições em Análise"
                    ),
                ),
                ("meta", models.IntegerField(verbose_name="Meta")),
                (
                    "curso",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cursos.CursoNoCampus",
                        verbose_name="Curso",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="psct.FaseAnalise",
                        verbose_name="Fase de Análise",
                    ),
                ),
                (
                    "modalidade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="psct.Modalidade",
                        verbose_name="Modalidade",
                    ),
                ),
            ],
            options={
                "verbose_name": "Progresso da Análise",
                "verbose_name_plural": "Progressos das Análises",
            },
        ),
        migrations.CreateModel(
            name="Recurso",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_cadastro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data do Cadastro"
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Data da Atualização"
                    ),
                ),
                ("texto", models.TextField(verbose_name="Texto do recurso")),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="psct.FaseRecurso",
                        verbose_name="Fase de Recurso",
                    ),
                ),
            ],
            options={"verbose_name": "Recurso", "verbose_name_plural": "Recursos",},
        ),
        migrations.CreateModel(
            name="RegraExclusaoGrupo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valor",
                    models.CharField(
                        max_length=255, verbose_name="Valor de comparação"
                    ),
                ),
                (
                    "coluna",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="psct.Coluna",
                        verbose_name="Coluna",
                    ),
                ),
                (
                    "fase",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="psct.FaseAnalise",
                        verbose_name="Fase de análise",
                    ),
                ),
                (
                    "grupo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.Group",
                        verbose_name="Grupo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regra de Exclusão de Inscrição",
                "verbose_name_plural": "Regras de Exclusão de Inscrições",
            },
        ),
        migrations.AlterModelOptions(
            name="inscricao",
            options={
                "permissions": (
                    (
                        "recover_inscricao",
                        "Administrador pode recuperar dados de inscrição",
                    ),
                    ("view_inscricao", "Administrador pode ver os dados da inscrição"),
                    ("list_inscricao", "Administrador pode listar inscrições"),
                    (
                        "add_list_inscritos",
                        "Administrador pode criar listar de inscrições",
                    ),
                ),
                "verbose_name": "Inscrição",
                "verbose_name_plural": "Inscrições",
            },
        ),
        migrations.AddField(
            model_name="processoinscricao",
            name="data_final_comprovante",
            field=models.DateTimeField(
                blank=True,
                help_text="A data e o hora inseridas devem ser posteriores à data inicial de emissão de comprovante.",
                null=True,
                verbose_name="Data final de emissão do comprovante de inscrição",
            ),
        ),
        migrations.AddField(
            model_name="processoinscricao",
            name="data_inicial_comprovante",
            field=models.DateTimeField(
                blank=True,
                help_text="Se a data e a hora inseridas forem anteriores a este momento, o comprovante será liberado após salvar.",
                null=True,
                verbose_name="Data inicial de emissão do comprovante de inscrição",
            ),
        ),
        migrations.AddField(
            model_name="recurso",
            name="inscricao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="psct.Inscricao",
                verbose_name="Inscrição",
            ),
        ),
        migrations.AddField(
            model_name="recurso",
            name="usuario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Usuário",
            ),
        ),
        migrations.AddField(
            model_name="parecerhomologador",
            name="recurso",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pareceres_homologadores",
                to="psct.Recurso",
                verbose_name="Recurso",
            ),
        ),
        migrations.AddField(
            model_name="pareceravaliador",
            name="recurso",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="pareceres_avaliadores",
                to="psct.Recurso",
                verbose_name="Recurso",
            ),
        ),
        migrations.AddField(
            model_name="mailboxhomologador",
            name="recursos",
            field=models.ManyToManyField(
                related_name="mailbox_homologadores",
                to="psct.Recurso",
                verbose_name="recursos",
            ),
        ),
        migrations.AddField(
            model_name="mailboxgrupohomologadores",
            name="recursos",
            field=models.ManyToManyField(
                related_name="mailbox_grupo_homologadores",
                to="psct.Recurso",
                verbose_name="recursos",
            ),
        ),
        migrations.AddField(
            model_name="mailboxgrupoavaliadores",
            name="recursos",
            field=models.ManyToManyField(
                related_name="mailbox_grupo_avaliadores",
                to="psct.Recurso",
                verbose_name="recursos",
            ),
        ),
        migrations.AddField(
            model_name="mailboxavaliador",
            name="recursos",
            field=models.ManyToManyField(
                related_name="mailbox_avaliadores",
                to="psct.Recurso",
                verbose_name="recursos",
            ),
        ),
        migrations.AddField(
            model_name="faserecurso",
            name="avaliadores",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="fase_recurso_avaliadores",
                to="psct.GrupoEdital",
                verbose_name="Grupo de Avaliadores",
            ),
        ),
        migrations.AddField(
            model_name="faserecurso",
            name="edital",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="editais.Edital",
                verbose_name="Edital",
            ),
        ),
        migrations.AddField(
            model_name="faserecurso",
            name="homologadores",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="fase_recurso_homologadores",
                to="psct.GrupoEdital",
                verbose_name="Grupo de Homologadores",
            ),
        ),
        migrations.AddField(
            model_name="faseanalise",
            name="avaliadores",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="fase_analise_avaliadores",
                to="psct.GrupoEdital",
                verbose_name="Grupo de Avaliadores",
            ),
        ),
        migrations.AddField(
            model_name="faseanalise",
            name="edital",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="editais.Edital",
                verbose_name="Edital",
            ),
        ),
        migrations.AddField(
            model_name="faseanalise",
            name="homologadores",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="fase_analise_homologadores",
                to="psct.GrupoEdital",
                verbose_name="Grupo de Homologadores",
            ),
        ),
        migrations.AddField(
            model_name="comprovanteinscricao",
            name="inscricao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="psct.Inscricao",
                verbose_name="Inscrição",
            ),
        ),
        migrations.AddField(
            model_name="avaliacaohomologador",
            name="inscricao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="avaliacoes_homologador",
                to="psct.InscricaoPreAnalise",
                verbose_name="Inscrição",
            ),
        ),
        migrations.AddField(
            model_name="avaliacaohomologador",
            name="texto_indeferimento",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="psct.JustificativaIndeferimento",
                verbose_name="Justificativa do indeferimento",
            ),
        ),
        migrations.AddField(
            model_name="avaliacaoavaliador",
            name="inscricao",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="avaliacoes_avaliador",
                to="psct.InscricaoPreAnalise",
                verbose_name="Inscrição",
            ),
        ),
        migrations.AddField(
            model_name="avaliacaoavaliador",
            name="texto_indeferimento",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="psct.JustificativaIndeferimento",
                verbose_name="Justificativa do indeferimento",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="modalidadevagacursoedital",
            unique_together=set([("curso_edital", "modalidade")]),
        ),
        migrations.AlterUniqueTogether(
            name="mailboxhomologadorinscricao",
            unique_together=set([("fase", "homologador")]),
        ),
        migrations.AlterUniqueTogether(
            name="mailboxhomologador", unique_together=set([("fase", "homologador")]),
        ),
        migrations.AlterUniqueTogether(
            name="mailboxavaliadorinscricao",
            unique_together=set([("fase", "avaliador")]),
        ),
        migrations.AlterUniqueTogether(
            name="mailboxavaliador", unique_together=set([("fase", "avaliador")]),
        ),
        migrations.AlterUniqueTogether(
            name="cursoedital", unique_together=set([("edital", "curso")]),
        ),
    ]

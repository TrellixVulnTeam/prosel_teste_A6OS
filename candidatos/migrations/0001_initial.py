# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-03-10 11:22
from __future__ import unicode_literals

import base.validators
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("processoseletivo", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BeneficioGovernoFederal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=100, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Benefícios de Governo Federal",
                "verbose_name": "Benefício do Governo Federal",
            },
        ),
        migrations.CreateModel(
            name="Candidato",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cpf",
                    models.CharField(
                        max_length=14,
                        validators=[base.validators.cpf_validator],
                        verbose_name="CPF",
                    ),
                ),
                ("rg", models.CharField(max_length=50, verbose_name="RG")),
                (
                    "orgao_expeditor",
                    models.CharField(max_length=50, verbose_name="Orgão expeditor"),
                ),
                (
                    "data_expedicao",
                    models.DateTimeField(verbose_name="Data de Expedição"),
                ),
                ("nome", models.CharField(max_length=100, verbose_name="Nome")),
                ("nascimento", models.DateTimeField(verbose_name="Nascimento")),
                (
                    "sexo",
                    models.CharField(
                        choices=[("M", "Masculino"), ("F", "Feminino")],
                        max_length=1,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "nome_mae",
                    models.CharField(max_length=100, verbose_name="Nome da Mãe"),
                ),
                (
                    "logradouro",
                    models.CharField(max_length=255, verbose_name="Logradouro"),
                ),
                (
                    "numero_endereco",
                    models.CharField(max_length=10, verbose_name="Número"),
                ),
                (
                    "complemento_endereco",
                    models.CharField(max_length=255, verbose_name="Complemento"),
                ),
                (
                    "uf",
                    models.CharField(
                        choices=[
                            ("AC", "Acre"),
                            ("AL", "Alagoas"),
                            ("AP", "Amapa"),
                            ("AM", "Amazonas"),
                            ("BA", "Bahia"),
                            ("CE", "Ceará"),
                            ("DF", "Distrito Federal"),
                            ("ES", "Espírito Santo"),
                            ("GO", "Goiás"),
                            ("MA", "Maranhão"),
                            ("MT", "Mato Grosso"),
                            ("MS", "Mato Grosso do Sul"),
                            ("MG", "Minas Gerais"),
                            ("PA", "Pará"),
                            ("PB", "Paraíba"),
                            ("PR", "Paraná"),
                            ("PE", "Pernambuco"),
                            ("PI", "Piauí"),
                            ("RJ", "Rio de Janeiro"),
                            ("RN", "Rio Grande do Norte"),
                            ("RS", "Rio Grande do Sul"),
                            ("RO", "Rondônia"),
                            ("RR", "Roraima"),
                            ("SC", "Santa Catarina"),
                            ("SP", "São Paulo"),
                            ("SE", "Sergipe"),
                            ("TO", "Tocantis"),
                        ],
                        max_length=2,
                        verbose_name="UF",
                    ),
                ),
                (
                    "municipio",
                    models.CharField(max_length=55, verbose_name="Município"),
                ),
                ("bairro", models.CharField(max_length=55, verbose_name="Bairro")),
                ("cep", models.CharField(max_length=10, verbose_name="CEP")),
                (
                    "telefone",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="Celular"
                    ),
                ),
                (
                    "telefone2",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Telefone Fixo",
                    ),
                ),
                ("email", models.EmailField(max_length=55, verbose_name="E-mail")),
                (
                    "nacionalidade",
                    models.CharField(max_length=55, verbose_name="Nacionalidade"),
                ),
                (
                    "naturalidade",
                    models.CharField(max_length=55, verbose_name="Naturalidade"),
                ),
                (
                    "naturalidade_uf",
                    models.CharField(
                        choices=[
                            ("AC", "Acre"),
                            ("AL", "Alagoas"),
                            ("AP", "Amapa"),
                            ("AM", "Amazonas"),
                            ("BA", "Bahia"),
                            ("CE", "Ceará"),
                            ("DF", "Distrito Federal"),
                            ("ES", "Espírito Santo"),
                            ("GO", "Goiás"),
                            ("MA", "Maranhão"),
                            ("MT", "Mato Grosso"),
                            ("MS", "Mato Grosso do Sul"),
                            ("MG", "Minas Gerais"),
                            ("PA", "Pará"),
                            ("PB", "Paraíba"),
                            ("PR", "Paraná"),
                            ("PE", "Pernambuco"),
                            ("PI", "Piauí"),
                            ("RJ", "Rio de Janeiro"),
                            ("RN", "Rio Grande do Norte"),
                            ("RS", "Rio Grande do Sul"),
                            ("RO", "Rondônia"),
                            ("RR", "Roraima"),
                            ("SC", "Santa Catarina"),
                            ("SP", "São Paulo"),
                            ("SE", "Sergipe"),
                            ("TO", "Tocantis"),
                        ],
                        max_length=2,
                        verbose_name="UF da naturalidade",
                    ),
                ),
                (
                    "profissao",
                    models.CharField(max_length=80, verbose_name="Profissão/Ocupação"),
                ),
                (
                    "tipo_sanguineo",
                    models.CharField(
                        choices=[
                            ("A_POS", "A+"),
                            ("B_POS", "B+"),
                            ("AB_POS", "AB+"),
                            ("O_POS", "O+"),
                            ("A_NEG", "A-"),
                            ("B_NEG", "B-"),
                            ("AB_NEG", "AB-"),
                            ("O_NEG", "O-"),
                        ],
                        max_length=10,
                        verbose_name="Tipo sanguíneo",
                    ),
                ),
                ("certidao", models.CharField(max_length=80, verbose_name="Certidão")),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "declara_veracidade",
                    models.BooleanField(
                        default=False,
                        verbose_name="DECLARO, para os fins de direito, sob as penas da lei, que as informações e os documentos que apresento para pré-matrícula no IFPB, são fiéis à verdade e condizentes com a realidade dos fatos. Fico ciente, portanto, que a falsidade desta declaração configura-se em crime previsto no Código Penal Brasileiro e passível de apuração na forma da Lei.",
                    ),
                ),
                (
                    "candidato_ps",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="processoseletivo.Candidato",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Candidatos", "verbose_name": "Candidato",},
        ),
        migrations.CreateModel(
            name="Caracterizacao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "possui_necessidade_especial",
                    models.BooleanField(
                        verbose_name="Você é uma pessoa com deficiência / necessidade educacional especial?"
                    ),
                ),
                (
                    "qtd_filhos",
                    models.PositiveIntegerField(
                        default=0, null=True, verbose_name="Quantidade de filhos"
                    ),
                ),
                (
                    "aluno_exclusivo_rede_publica",
                    models.BooleanField(
                        help_text="Marque caso possua histórico escolar integral a partir do 6° ano do Ensino Fundamental até o 3° ano do Ensino Médio exclusivamente em escola da rede pública do país.",
                        verbose_name="Aluno da rede pública",
                    ),
                ),
                (
                    "ensino_fundamental_conclusao",
                    models.PositiveIntegerField(
                        verbose_name="Ano de conclusão do Ensino Fundamental"
                    ),
                ),
                (
                    "ensino_medio_conclusao",
                    models.PositiveIntegerField(
                        verbose_name="Ano de conclusão do Ensino Médio"
                    ),
                ),
                (
                    "ficou_tempo_sem_estudar",
                    models.BooleanField(
                        help_text="Marque caso tenha permanecido algum tempo sem estudar.",
                        verbose_name="Ausência escolar",
                    ),
                ),
                (
                    "tempo_sem_estudar",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Informe quantos anos ficou sem estudar caso tenha marcado a opção anterior.",
                        null=True,
                        verbose_name="Período de Ausência",
                    ),
                ),
                (
                    "possui_conhecimento_idiomas",
                    models.BooleanField(verbose_name="Conhecimento em idiomas"),
                ),
                (
                    "possui_conhecimento_informatica",
                    models.BooleanField(verbose_name="Conhecimento em informática"),
                ),
                (
                    "nome_escola_ensino_fundamental",
                    models.CharField(
                        max_length=50,
                        null=True,
                        verbose_name="Nome da escola que fez o Ensino Fundamental",
                    ),
                ),
                (
                    "nome_escola_ensino_medio",
                    models.CharField(
                        max_length=50,
                        null=True,
                        verbose_name="Nome da escola que fez o ensino médio",
                    ),
                ),
                (
                    "renda_bruta_familiar",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Considerar a soma de todos os rendimentos mensais da família sem os descontos.",
                        max_digits=6,
                        verbose_name="Renda Bruta Familiar R$",
                    ),
                ),
                (
                    "qtd_pessoas_domicilio",
                    models.PositiveIntegerField(
                        help_text="Número de pessoas que moram na sua residência (incluindo você).",
                        verbose_name="Número de pessoas no domicílio",
                    ),
                ),
                ("pai_falecido", models.BooleanField(verbose_name="Pai faleceu?")),
                ("mae_falecida", models.BooleanField(verbose_name="Mãe faleceu?")),
                (
                    "local_acesso_internet",
                    models.CharField(
                        max_length=50,
                        null=True,
                        verbose_name="Local de acesso à internet",
                    ),
                ),
                (
                    "quantidade_computadores",
                    models.PositiveIntegerField(
                        null=True,
                        verbose_name="Quantidade de computadores desktop que possui",
                    ),
                ),
                (
                    "quantidade_notebooks",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Quantidade de notebooks que possui"
                    ),
                ),
                (
                    "quantidade_netbooks",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Quantidade de netbooks que possui"
                    ),
                ),
                (
                    "quantidade_smartphones",
                    models.PositiveIntegerField(
                        null=True, verbose_name="Quantidade de smartphones que possui"
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "declara_veracidade",
                    models.BooleanField(
                        default=False,
                        verbose_name="DECLARO, para os fins de direito, sob as penas da lei, que as informações e os documentos que apresento para pré-matrícula no IFPB, são fiéis à verdade e condizentes com a realidade dos fatos. Fico ciente, portanto, que a falsidade desta declaração configura-se em crime previsto no Código Penal Brasileiro e passível de apuração na forma da Lei.",
                    ),
                ),
                (
                    "beneficiario_programa_social",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Informe os programas do governo federal dos quais você ou algum membro de sua família seja beneficiário.",
                        to="candidatos.BeneficioGovernoFederal",
                        verbose_name="Programas sociais do Governo Federal",
                    ),
                ),
                (
                    "candidato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="candidatos.Candidato",
                        verbose_name="Candidato",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanhiaDomiciliar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Companhias Domiciliares",
                "verbose_name": "Companhia Domiciliar",
            },
        ),
        migrations.CreateModel(
            name="ComunicadoCandidato",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Convocação", "Convocação"),
                            (
                                "Resultado parcial de mátricula",
                                "Resultado parcial de mátricula",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                ("assunto", models.CharField(max_length=50, verbose_name="Assunto")),
                ("mensagem", ckeditor.fields.RichTextField()),
            ],
            options={
                "verbose_name_plural": "Comunicado aos Candidatos",
                "verbose_name": "Comunicado ao Candidato",
            },
        ),
        migrations.CreateModel(
            name="ContribuinteRendaFamiliar",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Contribuintes de Renda Familiar",
                "verbose_name": "Contribuinte de Renda Familiar",
            },
        ),
        migrations.CreateModel(
            name="EstadoCivil",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Estados Civis",
                "verbose_name": "Estado Civil",
            },
        ),
        migrations.CreateModel(
            name="Idioma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descricao", models.CharField(max_length=50, verbose_name="Idioma")),
                (
                    "uso_caracterizacao",
                    models.BooleanField(
                        default=True, verbose_name="Usar na caracterização"
                    ),
                ),
            ],
            options={"verbose_name_plural": "Idiomas", "verbose_name": "Idioma",},
        ),
        migrations.CreateModel(
            name="InscricaoCaracterizacao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "moradia_especificacao",
                    models.CharField(
                        help_text='Somente preencha este campo caso, na opção anterior, tenha marcado "Outro".',
                        max_length=50,
                        null=True,
                        verbose_name="Situação de moradia",
                    ),
                ),
                (
                    "familiar_doente_cronico",
                    models.BooleanField(
                        default=False,
                        verbose_name="Algum membro da sua família tem doença crônica e/ou faz uso contínuo de medicamentos?",
                    ),
                ),
                (
                    "familiar_doente_cronico_nome",
                    models.CharField(
                        help_text="Especifique o nome do(s) familiar(es) e respectiva(s) doença(s) crônica(s)",
                        max_length=50,
                        null=True,
                        verbose_name="Familiar(es) com doença(s) crônica(s)",
                    ),
                ),
                (
                    "valor_transporte",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Se utiliza meio de transporte (ônibus, mototáxi, transporte locado), especifique o valor gasto.",
                        max_digits=6,
                        verbose_name="Valor gasto com transporte",
                    ),
                ),
                (
                    "remuneracao_trabalho",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Especifique o valor da sua remuneração de trabalho.",
                        max_digits=6,
                        verbose_name="Remuneração de trabalho",
                    ),
                ),
                (
                    "rendimento_mesada",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Especifique o valor que recebe de mesada.",
                        max_digits=6,
                        null=True,
                        verbose_name="Redimento de Mesada",
                    ),
                ),
                (
                    "rendimento_aux_parentes",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Especifique o valor que recebe de auxílio de parentes.",
                        max_digits=6,
                        null=True,
                        verbose_name="Rendimento de auxílio de parentes",
                    ),
                ),
                (
                    "rendimento_aluguel",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Especifique o valor que recebe de rendimentos de aluguel(is).",
                        max_digits=6,
                        null=True,
                        verbose_name="Rendimento de aluguel(is)",
                    ),
                ),
                (
                    "rendimento_outro",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Caso tenha outro redimento, especifique-o.",
                        max_digits=6,
                        null=True,
                        verbose_name="Outros rendimentos",
                    ),
                ),
                (
                    "informacoes_complementares",
                    models.CharField(
                        help_text="Se achar necessário, relate alguma situação familiar especial, não contemplada no questionário,     a qual você julga importante para fundamentar a análise de sua situação econômica.",
                        max_length=50,
                        null=True,
                        verbose_name="Informações complementares",
                    ),
                ),
                ("data", models.DateTimeField(auto_now=True, verbose_name="Data")),
                (
                    "candidato",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="candidatos.Candidato",
                        verbose_name="Candidato",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IntegranteFamiliarCaracterizacao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=50, verbose_name="Nome")),
                ("idade", models.IntegerField(verbose_name="Idade")),
                (
                    "parentesco",
                    models.CharField(max_length=50, verbose_name="Parentesco"),
                ),
                (
                    "remuneracao",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Remuneração"
                    ),
                ),
                (
                    "estado_civil",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="candidatos.EstadoCivil",
                        verbose_name="Estado civil",
                    ),
                ),
                (
                    "inscricao_caracterizacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="candidatos.InscricaoCaracterizacao",
                        verbose_name="Inscrição da Caracterização",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MeioTransporte",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Meio de Transporte"),
                ),
            ],
            options={
                "verbose_name_plural": "Meios de Transporte",
                "verbose_name": "Meio de Transporte",
            },
        ),
        migrations.CreateModel(
            name="NecessidadeEspecial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Necessidades Especiais",
                "verbose_name": "Necessidade Especial",
            },
        ),
        migrations.CreateModel(
            name="NivelEscolaridade",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Níveis de Escolaridade",
                "verbose_name": "Nível de Escolaridade",
            },
        ),
        migrations.CreateModel(
            name="Raca",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Descrição"
                    ),
                ),
            ],
            options={"verbose_name_plural": "Raças", "verbose_name": "Raça",},
        ),
        migrations.CreateModel(
            name="RazaoAfastamentoEducacional",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Razões de Afastamentos Educacionais",
                "verbose_name": "Razão de Afastamento Educacional",
            },
        ),
        migrations.CreateModel(
            name="RendimentoCaracterizacao",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Mesada", "Mesada"),
                            (
                                "Auxílio de parentes ou amigos",
                                "Auxílio de parentes ou amigos",
                            ),
                            ("Aluguel/Arrendamento", "Aluguel/Arrendamento"),
                            ("Outros", "Outros"),
                        ],
                        max_length=50,
                    ),
                ),
                ("outro_tipo", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="SituacaoTrabalho",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Situações de Trabalho",
                "verbose_name": "Situação de Trabalho",
            },
        ),
        migrations.CreateModel(
            name="TipoAcessoInternet",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TipoAreaResidencial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Tipos de Áreas Residenciais",
                "verbose_name": "Tipo de Área Residencial",
            },
        ),
        migrations.CreateModel(
            name="TipoEmprego",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Tipos de Emprego",
                "verbose_name": "Tipo de Emprego",
            },
        ),
        migrations.CreateModel(
            name="TipoEscola",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TipoImovelResidencial",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
            options={
                "verbose_name_plural": "Tipos de Imóveis Residenciais",
                "verbose_name": "Tipo de Imóvel Residencial",
            },
        ),
        migrations.CreateModel(
            name="TipoServicoSaude",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=50, verbose_name="Descrição"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="integrantefamiliarcaracterizacao",
            name="situacao_trabalho",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.SituacaoTrabalho",
                verbose_name="Situação de trabalho",
            ),
        ),
        migrations.AddField(
            model_name="inscricaocaracterizacao",
            name="moradia_responsavel_financeiro",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoImovelResidencial",
                verbose_name="Situação de moradia do principal responsável financeiro",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="companhia_domiciliar",
            field=models.ForeignKey(
                help_text="Com que você mora?",
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.CompanhiaDomiciliar",
                verbose_name="Com quem mora?",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="contribuintes_renda_familiar",
            field=models.ManyToManyField(
                help_text="Pessoas que contribuem para rendar familiar.",
                to="candidatos.ContribuinteRendaFamiliar",
                verbose_name="Contribuintes da renda familiar",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="escola_ensino_fundamental",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoEscola",
                verbose_name="Tipo de escola que cursou o Ensino Fundamental",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="escola_ensino_medio",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="escola_ensino_medio",
                to="candidatos.TipoEscola",
                verbose_name="Tipo de escola que cursou o ensino médio",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="escolaridade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="candidato",
                to="candidatos.NivelEscolaridade",
                verbose_name="Nivel de escolaridade do candidato",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="estado_civil",
            field=models.ForeignKey(
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alunos",
                to="candidatos.EstadoCivil",
                verbose_name="Estado civil",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="estado_civil_pais",
            field=models.ForeignKey(
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pais",
                to="candidatos.EstadoCivil",
                verbose_name="Estado Civil dos pais",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="frequencia_acesso_internet",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoAcessoInternet",
                verbose_name="Frequência de Acesso à Internet",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="idiomas_conhecidos",
            field=models.ManyToManyField(
                blank=True,
                help_text="Informe os idiomas sobre os quais você tem conhecimento caso tenha marcado a opção anterior.",
                to="candidatos.Idioma",
                verbose_name="Idiomas",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="mae_nivel_escolaridade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mae",
                to="candidatos.NivelEscolaridade",
                verbose_name="Nível de escolaridade da mãe",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="meio_transporte_utilizado",
            field=models.ManyToManyField(
                help_text="Meio de transporte que você utiliza/utilizará para se deslocar.",
                to="candidatos.MeioTransporte",
                verbose_name="Meio de transporte",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="necessidade_especial",
            field=models.ManyToManyField(
                blank=True,
                help_text="Informe as deficiências/necessidades educacionais especiais caso tenha marcado a opção anterior.",
                to="candidatos.NecessidadeEspecial",
                verbose_name="Especifique as deficiências/necessidades educacionais especiais",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="pai_nivel_escolaridade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pai",
                to="candidatos.NivelEscolaridade",
                verbose_name="Nível de escolaridade do pai",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="raca",
            field=models.ForeignKey(
                default=0,
                help_text="Como você se considera quanto a sua questão racial?",
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.Raca",
                verbose_name="Etnia/Raça/Cor",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="razao_ausencia_educacional",
            field=models.ForeignKey(
                blank=True,
                help_text="Informe o motivo pelo qual você ficou sem estudar caso tenha marcado a opção anterior.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.RazaoAfastamentoEducacional",
                verbose_name="Motivo da Ausência Escolar",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="responsavel_financeir_trabalho_situacao",
            field=models.ForeignKey(
                help_text="Situação em que seu pai se encontra no mercado de trabalho.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="responsavel_financeiro",
                to="candidatos.SituacaoTrabalho",
                verbose_name="Situação de trabalho do principal responsável financeiro",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="responsavel_financeiro",
            field=models.ForeignKey(
                help_text="Pessoa responsável pela renda familiar",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="responsavel_financeiro",
                to="candidatos.ContribuinteRendaFamiliar",
                verbose_name="Principal responsável pela renda familiar",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="responsavel_financeiro_nivel_escolaridade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="responsavel_financeiro",
                to="candidatos.NivelEscolaridade",
                verbose_name="Nível de escolaridade do principal responsável financeiro",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="tipo_area_escola_ensino_fundamental",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tipo_area_escola_ensino_fundamental",
                to="candidatos.TipoAreaResidencial",
                verbose_name="Tipo de localização da escola que fez o ensino fundamental",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="tipo_area_escola_ensino_medio",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tipo_area_escola_ensino_medio",
                to="candidatos.TipoAreaResidencial",
                verbose_name="Tipo de localização da escola que fez o ensino médio",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="tipo_area_residencial",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoAreaResidencial",
                verbose_name="Tipo de área residencial em que reside",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="tipo_imovel_residencial",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoImovelResidencial",
                verbose_name="Tipo de imóvel em que reside",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="tipo_servico_saude",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.TipoServicoSaude",
                verbose_name="Serviço de saúde que você mais utiliza",
            ),
        ),
        migrations.AddField(
            model_name="caracterizacao",
            name="trabalho_situacao",
            field=models.ForeignKey(
                help_text="Situação em que você se encontra no mercado de trabalho.",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="candidatos.SituacaoTrabalho",
                verbose_name="Situação de trabalho",
            ),
        ),
    ]
